# Generated by Django 4.2.4 on 2023-08-14 04:52

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import sauces.utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255, unique=True), size=None)),
                ('links', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=255, unique=True), size=None)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Hash',
            fields=[
                ('bits', sauces.utils.fields.BitField(primary_key=True, serialize=False, unique=True)),
                ('method', models.IntegerField(choices=[(0, 'Perceptual Hash'), (1, 'Average Hash'), (2, 'Differential Hash')], default=1)),
                ('crop_resistant', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Sauce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('site_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=255), size=None)),
                ('api_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=255), size=None)),
                ('file_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(max_length=255), size=None)),
                ('source_site_id', models.CharField(max_length=255)),
                ('downloaded', models.BooleanField(default=False)),
                ('height', models.PositiveSmallIntegerField()),
                ('width', models.PositiveSmallIntegerField()),
                ('hashes', models.ManyToManyField(related_name='sauces', to='sauces.hash')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('website', models.URLField(max_length=255)),
                ('api_docs', models.URLField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnimeSauce',
            fields=[
                ('sauce_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sauces.sauce')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sauces.sauce',),
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sauces.entity')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sauces.entity',),
        ),
        migrations.CreateModel(
            name='Uploader',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sauces.entity')),
                ('type', models.IntegerField(choices=[(0, 'Individual'), (1, 'Scanlation Group')], default=0)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sauces.entity',),
        ),
        migrations.AddField(
            model_name='sauce',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sauces', to='sauces.source'),
        ),
        migrations.AddField(
            model_name='sauce',
            name='uploaders',
            field=models.ManyToManyField(related_name='sauces', to='sauces.uploader'),
        ),
        migrations.CreateModel(
            name='MangaSauce',
            fields=[
                ('sauce_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sauces.sauce')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manga_sauces', to='sauces.artist')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sauces.sauce',),
        ),
        migrations.CreateModel(
            name='ArtSauce',
            fields=[
                ('sauce_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sauces.sauce')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='art_sauces', to='sauces.artist')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('sauces.sauce',),
        ),
        migrations.AddField(
            model_name='artist',
            name='direct_uploader',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artist', to='sauces.uploader'),
        ),
    ]
