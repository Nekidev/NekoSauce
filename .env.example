# The amount of gunicorn workers to spawn. Gunicorn workers are the ones that
# handle requests.
BACKEND_GUNICORN_WORKERS=

# The amount of dramatiq workers to spawn. Dramatiq workers are the ones that
# handle background tasks.
BACKEND_DRAMATIQ_WORKERS=
BACKEND_DRAMATIQ_THREADS=

# The Bunny.net credentials for the storage
BACKEND_BUNNY_USERNAME=
BACKEND_BUNNY_PASSWORD=
BACKEND_BUNNY_HOSTNAME=  # Schema + hostname + trailing slash. E.g. https://my-storage.b-cdn.net/
BACKEND_BUNNY_REGION=

# All allowed hostnames (without ports), separated by a white space. If the
# hostname doesn't match, it'll return a 400 error. You also need to set the
# BACKEND_SECRET_KEY in the secrets folder (./secrets/BACKEND_SECRET_KEY.txt).
BACKEND_ALLOWED_HOSTS=

# The CSRF trusted origins, separated by a white space. Schema + hostname (no
# port). E.g. http://localhost
BACKEND_CSRF_TRUSTED_ORIGINS=  

# Whether to enable debug mode or not. This is a dangerous mode since it
# reveals a lot of sensitive information to the client. Make sure to keep
# it disabled in production. In development, you should set this to True.
BACKEND_DEBUG=False

# Different source credentials to fetch sauces.
BACKEND_SOURCE_DANBOORU_USERNAME=  # Your Danbooru username.
BACKEND_SOURCE_DANBOORU_PASSWORD=  # Your Danbooru API key.
BACKEND_SOURCE_GELBOORU_USERNAME=  # Your Gelbooru user ID.
BACKEND_SOURCE_GELBOORU_PASSWORD=  # Your Gelbooru API key.

# The PostgreSQL credentials for the database. I'd also make sure to block db
# access using a firewall like UFW. You also need to set the DATABASE_PASSWORD
# in the secrets folder (./secrets/DATABASE_PASSWORD.txt).
DATABASE_USERNAME=
DATABASE_HOSTNAME=database
DATABASE_NAME=
DATABASE_PORT=5432

# Credentials for the message broker, RabbitMQ. Also make sure to block
# external access to it using a firewall.
RABBITMQ_USERNAME=
RABBITMQ_PASSWORD=
RABBITMQ_HOSTNAME=rabbitmq
RABBITMQ_PORT=5672
